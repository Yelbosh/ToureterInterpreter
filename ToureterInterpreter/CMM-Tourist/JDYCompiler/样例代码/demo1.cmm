/* Title:	Eric解释器实例代码demo1
 * Author:	贾道远
 * No:		2010302580176
 * Date:	2012/11/14
 * Desc:	这个demo算是对解释器语法分析进行了一个比较完整的测试
 *			支持struct, class.程序以class组织
 *			struct中只包含类型申明.class可以有类型也可以有函数
 *			多维数组声明, 函数声明, 变量连续声明, 变量声明并赋值
 * 			逻辑表达式, 函数表达式(本质是函数调用), 数值表达式
 *			基本的定义,条件,循环,读入,输出语句,函数调用语句.
 *			整数,浮点数,布尔型,空类型
 *			
 */
struct test{
	int test;
	real test_single[10];
	int test_int_array[2][3][4];
}

class demo1{
	int test;
	int test_int_2=2;
	int test_int_3=1,test_int_4=2,test_int_5,test_int_6=test_int; //complicated define
	real test_float[bb][2],test_single;//包含array声明的情况
	bool test_bool=!false; //Bool类型
	bool test_bool_2=!test_bool,test_bool_3=true,test_bool_4;
	int dimensional[test_int_2][3][4][5]; //多维数组的声明

	int main(){
		int i=0;
		bool temp=false;
		while(i<100 && i>=-1 ){
			i=i+1;
			bool call_foo=!temp;
			if(call_foo && i%2==0)
				foo(9+9+9+9);
			else{
				int tmp_array[3][5];
				int size=5;
				write bar(tmp_array[1],size);
			}
				
		}
	}
	void foo(int a){
		write (-a+1)/(10- -b[2][c[3]])-2*3 < 20;
	}

	int bar(int array[],int size){
		int i=0;
		while(i<size){
			i=i+1;
			read array[i];
		}
		
		return 10;
	}
}